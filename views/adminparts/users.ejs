<div class="users-wrapper">
    <div class="head">
        <div class="webtoonz-sub u-subs" onclick="toggleBtwUsersSubs('all')">All</div>
        <div class="webtoonz-sub u-subs" onclick="toggleBtwUsersSubs('admin')">Admin</div>
        <div class="webtoonz-sub u-subs" onclick="toggleBtwUsersSubs('author')">Authors</div>
        <div class="webtoonz-sub u-subs" onclick="toggleBtwUsersSubs('ban')">Banned</div>
    </div>
    <div class="searchbar-wrapper">
        <div class="search"><input type="text" class="usertb-searchbar"><div class="S-icon" onclick="searchUsers()"><span class="material-symbols-outlined">
            search
            </span></div></div>
    </div>
    <div class="table-container">
        <table class="responsive-table">
          <thead>
            <tr>
              <th>SN</th>
              <th>Role</th>
              <th>Name</th>
              <th>Email</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody class="users-tb">
            <!-- admin users table  -->
          </tbody>
        </table>
      </div>
      
</div>
    
<script>
    let users = <%- JSON.stringify(users) %>;
    let accType = '<%= user.type %>';
    const usersTB = document.querySelector('.users-tb');
    const userSearchBar = document.querySelector('.usertb-searchbar');
    let uStatus = 'all';

    function toggleBtwUsersSubs(s){
        let uSubs = document.querySelectorAll('.u-subs');
        let Ban = document.querySelectorAll('.ban');
        let unBan = document.querySelectorAll('.unban');

        if(s === 'all'){
            uStatus = 'all';
            uSubs.forEach(s => {
                s.style.color = grey
            });
            uSubs[0].style.color = orange;
            Ban.forEach(b => {b.style.display = 'inline'});
            unBan.forEach(b => {b.style.display = 'none'});
            displayUsers(users);
        }

        if(s === 'admin'){
            uStatus = 'admin';
            uSubs.forEach(s => {
                s.style.color = grey
            })
            uSubs[1].style.color = orange;
            Ban.forEach(b => {b.style.display = 'none'});
            unBan.forEach(b => {b.style.display = 'none'});
            let fUser = users.filter(user => user.type.includes('admin'));
            displayUsers(fUser)
        }

        if(s === 'author'){
            uStatus = 'author';
            uSubs.forEach(s => {
                s.style.color = grey
            })
            uSubs[2].style.color = orange;
            Ban.forEach(b => {b.style.display = 'inline'});
            unBan.forEach(b => {b.style.display = 'none'});
            let fUser = users.filter(user => user.isAuthor);
            displayUsers(fUser)
        }

        if(s === 'ban'){
            uStatus = 'ban';
            uSubs.forEach(s => {
                s.style.color = grey
            })
            uSubs[3].style.color = orange;
            Ban.forEach(b => {b.style.display = 'none'});
            unBan.forEach(b => {b.style.display = 'inline'});
            let fUser = users.filter(user =>  user.status === 'banned' );
            displayUsers(fUser)
        }

    
    }

    function displayUsers(user){
        usersTB.innerHTML = '';
        user.forEach((user, i) => {
            usersTB.innerHTML += `<tr>
              <td> ${i + 1} </td>
              <td>${user.type}</td>
              <td>${user.name}</td>
              <td>${user.email}</td>
              <td>
                ${
                    (user.status === 'active') ?
                     `<button class="btn ban u-btns" onclick='ban("${user._id}", "banned")'>Ban</button>` 
                     :
                      `<button class="btn unban u-btns" onclick='ban("${user._id}", "active")'>Unban</button>`
                }
                ${
                    (user.type === 'admin2' && accType === 'admin1') ? `<button class="btn ban u-btns" onclick='admin("${user._id}", "regular")' style='background-color: red;'>Remove Admin</button>` 
                     :
                      ``
                }

                ${
                    (user.type === 'regular' && accType === 'admin1') ?
                     `<button class="btn ban u-btns" onclick='admin("${user._id}", "admin2")' style='background-color: green;'>Make Admin</button>` 
                     :
                      ``
                }
                <br>
                <br>
                <span class="author-status">${ user.isAuthor ? 'Author' : '' }</span>
              </td>
            </tr>`
        })
    }

    userSearchBar.addEventListener('keyup', (e) => {searchUsers()})

    function searchUsers(){
        let value = userSearchBar.value.toUpperCase();

        if(uStatus === 'all'){
            let fUser = users.filter(user => user.name.toUpperCase().includes(value));
            displayUsers(fUser);
        }

        if(uStatus === 'admin'){
            
            let fUser = users.filter(user => user.status.toUpperCase().includes(admin) && user.name.includes(value));
            displayUsers(fUser)
        }

        if(uStatus === 'author'){
            
            let fUser = users.filter(user => user.isAuthor && user.name.toUpperCase().includes(value));
            displayUsers(fUser)
        }

        if(uStatus === 'ban'){
            
            let fUser = users.filter(user => user.status === 'banned' && user.name.toUpperCase().includes(value));
            displayUsers(fUser)
        }
    }

    async function ban(id, status){
        if(isLoading) return;
        isLoading = true
        try {
            let res = await fetch(`/twp/admin/isban/${id}?status=${status}`, { method: 'PUT' });

            let data = await res.json();
            let {E, userz} = data;
            if(E) return displayError(E);

            users = userz;
            displayUsers(users)
        } catch (error) {
            displayError(error.message)
        }
        finally{
            isLoading = false
        }
    };

    async function admin(id,type) {
        if(isLoading) return;
        isLoading = true
        try {
            let res = await fetch(`/twp/admin/makeadmin/${id}?type=${type}`, { method: 'PUT' });

            let data = await res.json();
            let {E,userz, M} = data;

            if(E) throw new Error(E)
            if(userz){
                users = userz;
                displayUsers(users)

            }
        } catch (error) {
            displayError(error.message)
        }
        finally{
            isLoading = false
        }
    }
</script>